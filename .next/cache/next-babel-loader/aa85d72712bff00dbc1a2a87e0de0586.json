{"ast":null,"code":"var _jsxFileName = \"/Users/jackdiamond/Desktop/pyalgos/pages/libraries.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport Footer from '../components/Footer';\nimport Link from 'next/link';\nimport Prism from \"prismjs\"; //import \"../prism.css\";\n\nexport default function Libraries() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-3618074380\" + \" \" + \"article-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3618074380\" + \" \" + \"article\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-3618074380\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Arrays\"), __jsx(\"p\", {\n    className: \"jsx-3618074380\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"The main functions with arrays in python have to do with accessing, slicing, removing elements, list comprehension, etc. These are must know operations but you should be careful to notice the time complexity of each operation before incorporating it into your algorithm.\"), __jsx(\"pre\", {\n    className: \"jsx-3618074380\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"code\", {\n    className: \"jsx-3618074380\" + \" \" + \"language-python\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\n                # Instantiating a list.\\n                [1, 2, 3, 4]\\n                [1] + [0] * 4\\n                list(range(100))\\n\\n                # Basic operations\\n                len(arr)\\n                arr.append(1)             # O(1)\\n                arr.remove(2)             # O(n)\\n                arr.insert(3, 8)          # O(n)\\n\\n                # Instantiate a 2-D array\\n                [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\\n\\n                \")))), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"3618074380\",\n    __self: this\n  }, \".article-wrapper{background:#F9F9F9;height:80vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;font-family:Arial;}.article{background:white;max-width:800px;text-align:left;margin:20px 0;}.article h1{margin:10px 20px;}.article p{margin:10px 20px;line-height:1.5;}code{white-space:pre-wrap;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNrZGlhbW9uZC9EZXNrdG9wL3B5YWxnb3MvcGFnZXMvbGlicmFyaWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDeUIsQUFHOEIsQUFRRixBQU9BLEFBSUEsQUFLSSxpQkFmTCxBQU9sQixBQUlrQixFQW5CSixFQXdCZCxVQXZCZSxFQVFHLEFBV2xCLGdCQVZnQixjQUNoQiwwQ0FUeUIsbUdBQ0wsa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9qYWNrZGlhbW9uZC9EZXNrdG9wL3B5YWxnb3MvcGFnZXMvbGlicmFyaWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBGb290ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Gb290ZXInO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IFByaXNtIGZyb20gXCJwcmlzbWpzXCI7XG4vL2ltcG9ydCBcIi4uL3ByaXNtLmNzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMaWJyYXJpZXMoKSB7XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxIZWFkZXIvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFydGljbGUtd3JhcHBlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXJ0aWNsZVwiPlxuICAgICAgICAgICAgPGgxPkFycmF5czwvaDE+XG4gICAgICAgICAgICAgIDxwPlRoZSBtYWluIGZ1bmN0aW9ucyB3aXRoIGFycmF5cyBpbiBweXRob24gaGF2ZSB0byBkbyB3aXRoXG4gICAgICAgICAgICAgIGFjY2Vzc2luZywgc2xpY2luZywgcmVtb3ZpbmcgZWxlbWVudHMsIGxpc3QgY29tcHJlaGVuc2lvbiwgZXRjLlxuICAgICAgICAgICAgICBUaGVzZSBhcmUgbXVzdCBrbm93IG9wZXJhdGlvbnMgYnV0IHlvdSBzaG91bGQgYmUgY2FyZWZ1bCB0byBub3RpY2VcbiAgICAgICAgICAgICAgdGhlIHRpbWUgY29tcGxleGl0eSBvZiBlYWNoIG9wZXJhdGlvbiBiZWZvcmUgaW5jb3Jwb3JhdGluZyBpdCBpbnRvXG4gICAgICAgICAgICAgIHlvdXIgYWxnb3JpdGhtLlxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgIDxwcmU+XG4gICAgICAgICAgICAgICAgPGNvZGUgY2xhc3NOYW1lPVwibGFuZ3VhZ2UtcHl0aG9uXCI+e2BcbiAgICAgICAgICAgICAgICAjIEluc3RhbnRpYXRpbmcgYSBsaXN0LlxuICAgICAgICAgICAgICAgIFsxLCAyLCAzLCA0XVxuICAgICAgICAgICAgICAgIFsxXSArIFswXSAqIDRcbiAgICAgICAgICAgICAgICBsaXN0KHJhbmdlKDEwMCkpXG5cbiAgICAgICAgICAgICAgICAjIEJhc2ljIG9wZXJhdGlvbnNcbiAgICAgICAgICAgICAgICBsZW4oYXJyKVxuICAgICAgICAgICAgICAgIGFyci5hcHBlbmQoMSkgICAgICAgICAgICAgIyBPKDEpXG4gICAgICAgICAgICAgICAgYXJyLnJlbW92ZSgyKSAgICAgICAgICAgICAjIE8obilcbiAgICAgICAgICAgICAgICBhcnIuaW5zZXJ0KDMsIDgpICAgICAgICAgICMgTyhuKVxuXG4gICAgICAgICAgICAgICAgIyBJbnN0YW50aWF0ZSBhIDItRCBhcnJheVxuICAgICAgICAgICAgICAgIFtbMSwgMiwgM10sIFs0LCA1LCA2XSwgWzcsIDgsIDldXVxuXG4gICAgICAgICAgICAgICAgYH08L2NvZGU+XG4gICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDxGb290ZXIvPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLmFydGljbGUtd3JhcHBlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI0Y5RjlGOTtcbiAgICAgICAgICBoZWlnaHQ6IDgwdmg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBmb250LWZhbWlseTogQXJpYWw7XG4gICAgICAgIH1cblxuICAgICAgICAuYXJ0aWNsZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIG1hcmdpbjogMjBweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFydGljbGUgaDEge1xuICAgICAgICAgIG1hcmdpbjogMTBweCAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmFydGljbGUgcCB7XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDIwcHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvZGUge1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgICAgICAgfVxuXG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/jackdiamond/Desktop/pyalgos/pages/libraries.js */\"));\n}","map":{"version":3,"sources":["/Users/jackdiamond/Desktop/pyalgos/pages/libraries.js"],"names":["Header","Layout","Footer","Link","Prism","Libraries"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI;AAAA,wCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sRAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAgB,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0dADF,CARJ,CADF,CAFJ,EA+BE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF;AAAA;AAAA;AAAA,inHADF;AAiED","sourcesContent":["import Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport Footer from '../components/Footer';\nimport Link from 'next/link'\nimport Prism from \"prismjs\";\n//import \"../prism.css\";\n\nexport default function Libraries() {\n  return (\n    <Layout>\n      <Header/>\n        <div className=\"article-wrapper\">\n          <div className=\"article\">\n            <h1>Arrays</h1>\n              <p>The main functions with arrays in python have to do with\n              accessing, slicing, removing elements, list comprehension, etc.\n              These are must know operations but you should be careful to notice\n              the time complexity of each operation before incorporating it into\n              your algorithm.\n              </p>\n              <pre>\n                <code className=\"language-python\">{`\n                # Instantiating a list.\n                [1, 2, 3, 4]\n                [1] + [0] * 4\n                list(range(100))\n\n                # Basic operations\n                len(arr)\n                arr.append(1)             # O(1)\n                arr.remove(2)             # O(n)\n                arr.insert(3, 8)          # O(n)\n\n                # Instantiate a 2-D array\n                [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n                `}</code>\n              </pre>\n          </div>\n        </div>\n      <Footer/>\n      <style jsx global>{`\n        .article-wrapper {\n          background: #F9F9F9;\n          height: 80vh;\n          display: flex;\n          justify-content: center;\n          font-family: Arial;\n        }\n\n        .article {\n          background: white;\n          max-width: 800px;\n          text-align: left;\n          margin: 20px 0;\n        }\n\n        .article h1 {\n          margin: 10px 20px;\n        }\n\n        .article p {\n          margin: 10px 20px;\n          line-height: 1.5;\n        }\n\n        code {\n          white-space: pre-wrap;\n        }\n\n      `}</style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}